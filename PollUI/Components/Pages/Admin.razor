@page "/admin"
@using Poll.DAL.Entities
@using Poll.DAL.Services
@using Poll.DAL
@using Microsoft.EntityFrameworkCore
@using Poll.Services
@inject DatabaseReadContextProvider DatabaseReadContextProvider
@inject ILogger<Admin> Logger
@inject GameStateAccessor GameStateAccessor 
@inject NavigationManager NavigationManager 

<PageTitle>Admin</PageTitle>

<div class="">
    <h1>Jeux</h1>

    <div>
        @if (_templates == null)
        {
            <div>Chargement...</div>
        }
        else
        {
            foreach (var template in _templates)
            {
                <div class="card" style="width: 18rem;">
                    <div class="card-body">
                        <h5 class="card-title">@template.Name</h5>
                        <p class="card-text">Créé le @template.CreationDate.ToString("dd/MM/yyy")</p>
                        @if (_startingGame == template.Id)
                        {
                            <a class="btn btn-primary"><i class="fa fa-refresh fa-spin fa-fw me-1"></i>  Démarrer</a>
                        }
                        else
                        {
                            <a @onclick="()=>StartGame(template.Id)" class="btn btn-primary"><i class="fa fa-arrow-right fa-fw me-1"></i> Démarrer</a>
                        }
                    </div>
                </div>
            } 
        }
     
    </div>
</div>



@code {
    private GameTemplate[]? _templates = null;
    private int? _startingGame = null;
    protected override async Task OnInitializedAsync()
    {
        _templates = await DatabaseReadContextProvider.Read<PollContext, GameTemplate[]>(async db => await db.GameTemplates.ToArrayAsync());
        await base.OnInitializedAsync();
    }

    private async Task StartGame(int gameTemplateId)
    {
        Logger.LogInformation("Starting game for template {}", gameTemplateId);
        _startingGame = gameTemplateId;
        var game = await GameStateAccessor.CreateGame(gameTemplateId);
        NavigationManager.NavigateTo("/game/"+game.Id);
    }
}