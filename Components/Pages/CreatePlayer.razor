@page "/create-player/{GameId}"
@using Poll.DAL.Entities
@using Poll.Services

@inject ILogger<Home> Logger
@inject HttpUtils httpUtils
@inject NavigationManager NavigationManager
@inject PlayerService PlayerService

<PageTitle>Home</PageTitle>

<EditForm class="row g-3" Model="@Model" OnSubmit="@Submit">
    <div class="mb-3">
        <label for="firstname" class="form-label">Prénom:</label>
        <InputText type="text" class="form-control" @bind-Value="Model!.Name" id="firstname" placeholder=""/>
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary mb-3">OK</button>
    </div>
</EditForm>

@code {

    [Parameter]
    public string? GameId { get; set; }

    public Guid? GameIdGuid { get; set; }

    public Player Model { get; set; } = new Player()
    {
        Name = "",
    };

    protected override async Task OnInitializedAsync()
    {
        if (await httpUtils.IsPreRendering())
        {
            return;
        }


        if (!string.IsNullOrEmpty(GameId) && !Guid.TryParse(GameId, out var g))
        {
            GameIdGuid = g;
        }

        if (GameIdGuid is null)
        {
            NavigationManager.NavigateTo("/not-found");
            return;
        }

        var player = await PlayerService.GetPlayer(GameIdGuid.Value);
        if (player is not null)
        {
            Model.Name = player.Name;
        }
    }

    private async Task Submit()
    {
        if (string.IsNullOrEmpty(Model?.Name) || GameIdGuid is null)
        {
            return;
        }

        await PlayerService.SetPlayerName(GameIdGuid.Value, Model.Name);
        NavigationManager.NavigateTo("/game/" + GameIdGuid.Value);
    }

}