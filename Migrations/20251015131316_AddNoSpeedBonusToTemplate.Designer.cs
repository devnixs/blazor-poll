// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Poll.DAL;

#nullable disable

namespace Poll.Migrations
{
    [DbContext(typeof(PollContext))]
    [Migration("20251015131316_AddNoSpeedBonusToTemplate")]
    partial class AddNoSpeedBonusToTemplate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Poll.DAL.Entities.GameFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("GameTemplateId")
                        .HasColumnType("integer");

                    b.Property<string>("OriginalFilename")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GameTemplateId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Poll.DAL.Entities.GameTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("NoSpeedBonus")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("WaitingImageId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Identifier");

                    b.ToTable("GameTemplates");
                });

            modelBuilder.Entity("Poll.DAL.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("AskingQuestionImageId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<int>("DelayBeforeShowingAnswsers")
                        .HasColumnType("integer");

                    b.Property<int>("GameTemplateId")
                        .HasColumnType("integer");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<Guid?>("PresentingAnswerImageId")
                        .HasColumnType("uuid");

                    b.Property<bool>("QuestionDoesNotHaveRewards")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("GameTemplateId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Poll.DAL.Entities.QuestionChoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<bool>("IsValid")
                        .HasColumnType("boolean");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionChoice");
                });

            modelBuilder.Entity("Poll.DAL.Entities.RunHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Game")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Player")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.Property<int>("TemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("RunHistories");
                });

            modelBuilder.Entity("Poll.DAL.Entities.GameFile", b =>
                {
                    b.HasOne("Poll.DAL.Entities.GameTemplate", "GameTemplate")
                        .WithMany("Files")
                        .HasForeignKey("GameTemplateId");

                    b.Navigation("GameTemplate");
                });

            modelBuilder.Entity("Poll.DAL.Entities.Question", b =>
                {
                    b.HasOne("Poll.DAL.Entities.GameTemplate", "GameTemplate")
                        .WithMany("Questions")
                        .HasForeignKey("GameTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameTemplate");
                });

            modelBuilder.Entity("Poll.DAL.Entities.QuestionChoice", b =>
                {
                    b.HasOne("Poll.DAL.Entities.Question", "Question")
                        .WithMany("Choices")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Poll.DAL.Entities.GameTemplate", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Poll.DAL.Entities.Question", b =>
                {
                    b.Navigation("Choices");
                });
#pragma warning restore 612, 618
        }
    }
}
