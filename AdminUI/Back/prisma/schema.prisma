generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model GameTemplates {
  id Int @id(map: "PK_GameTemplates") @default(autoincrement()) @map("Id")
  creationDate DateTime @map("CreationDate") @db.Timestamptz(6)
  name String @map("Name")
  questions    Questions[]
}

model QuestionChoice {
  id Int @id(map: "PK_QuestionChoice") @default(autoincrement()) @map("Id")
  content String @map("Content") @db.VarChar(512)
  index Int @map("Index")
  questionId Int @map("QuestionId")
  isValid Boolean @map("IsValid")
  questions Questions @relation(fields: [questionId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_QuestionChoice_Questions_QuestionId")

  @@index([questionId], map: "IX_QuestionChoice_QuestionId")
}

model Questions {
  id Int @id(map: "PK_Questions") @default(autoincrement()) @map("Id")
  content String @map("Content") @db.VarChar(512)
  gameTemplateId Int @map("GameTemplateId")
  index Int @map("Index")
  askingQuestionImageUrl String? @default("") @map("AskingQuestionImageUrl") @db.VarChar(1024)
  presentingAnswerImageUrl String? @default("") @map("PresentingAnswerImageUrl") @db.VarChar(1024)
  questionChoice           QuestionChoice[]
  gameTemplates GameTemplates @relation(fields: [gameTemplateId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Questions_GameTemplates_GameTemplateId")

  @@index([gameTemplateId], map: "IX_Questions_GameTemplateId")
}

model EFMigrationsHistory {
  migrationId String @id(map: "PK___EFMigrationsHistory") @map("MigrationId") @db.VarChar(150)
  productVersion String @map("ProductVersion") @db.VarChar(32)

  @@map("__EFMigrationsHistory")
}
