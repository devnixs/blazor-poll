generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model GameTemplates {
  id           Int         @id(map: "PK_GameTemplates") @default(autoincrement()) @map("Id")
  creationDate DateTime    @db.Timestamptz(6) @map("CreationDate")
  name         String @map("Name")
  questions    Questions[]
}

model QuestionChoice {
  id         Int       @id(map: "PK_QuestionChoice") @default(autoincrement()) @map("Id")
  content    String    @db.VarChar(512) @map("Content")
  index      Int @map("Index")
  questionId Int @map("QuestionId")
  isValid    Boolean @map("IsValid")
  questions  Questions @relation(fields: [questionId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_QuestionChoice_Questions_QuestionId")

  @@index([questionId], map: "IX_QuestionChoice_QuestionId")
}

model Questions {
  id                       Int              @id(map: "PK_Questions") @default(autoincrement()) @map("Id")
  content                  String           @db.VarChar(512) @map("Content")
  gameTemplateId           Int @map("GameTemplateId")
  index                    Int @map("Index")
  askingQuestionImageUrl   String?          @default("") @db.VarChar(1024) @map("AskingQuestionImageUrl")
  presentingAnswerImageUrl String?          @default("") @db.VarChar(1024) @map("PresentingAnswerImageUrl")
  questionChoice           QuestionChoice[]
  gameTemplates            GameTemplates    @relation(fields: [gameTemplateId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Questions_GameTemplates_GameTemplateId")

  @@index([gameTemplateId], map: "IX_Questions_GameTemplateId")
}

model EFMigrationsHistory {
  migrationId    String @id(map: "PK___EFMigrationsHistory") @db.VarChar(150) @map("MigrationId")
  productVersion String @db.VarChar(32) @map("ProductVersion")

  @@map("__EFMigrationsHistory")
}
